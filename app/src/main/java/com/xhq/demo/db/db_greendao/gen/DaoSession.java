package com.xhq.demo.db.db_greendao.gen;

import com.xhq.demo.db.db_greendao.entry.Activate;
import com.xhq.demo.db.db_greendao.entry.ChatMessageBean;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig activateDaoConfig;
//    private final DaoConfig bindCivilCardDaoConfig;
    private final DaoConfig chatMessageBeanDaoConfig;
    private final DaoConfig downloadFileDaoConfig;
    private final DaoConfig realVerifyDaoConfig;
    private final DaoConfig recentContactDaoConfig;
    private final DaoConfig uploadFileDaoConfig;

    private final ActivateDao activateDao;
//    private final BindCivilCardDao bindCivilCardDao;
    private final ChatMessageBeanDao chatMessageBeanDao;
    private final DownloadFileDao downloadFileDao;
    private final RealVerifyDao realVerifyDao;
    private final RecentContactDao recentContactDao;
    private final UploadFileDao uploadFileDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        activateDaoConfig = daoConfigMap.get(ActivateDao.class).clone();
        activateDaoConfig.initIdentityScope(type);

//        bindCivilCardDaoConfig = daoConfigMap.get(BindCivilCardDao.class).clone();
//        bindCivilCardDaoConfig.initIdentityScope(type);

        chatMessageBeanDaoConfig = daoConfigMap.get(ChatMessageBeanDao.class).clone();
        chatMessageBeanDaoConfig.initIdentityScope(type);

        downloadFileDaoConfig = daoConfigMap.get(DownloadFileDao.class).clone();
        downloadFileDaoConfig.initIdentityScope(type);

        realVerifyDaoConfig = daoConfigMap.get(RealVerifyDao.class).clone();
        realVerifyDaoConfig.initIdentityScope(type);

        recentContactDaoConfig = daoConfigMap.get(RecentContactDao.class).clone();
        recentContactDaoConfig.initIdentityScope(type);

        uploadFileDaoConfig = daoConfigMap.get(UploadFileDao.class).clone();
        uploadFileDaoConfig.initIdentityScope(type);

        activateDao = new ActivateDao(activateDaoConfig, this);
//        bindCivilCardDao = new BindCivilCardDao(bindCivilCardDaoConfig, this);
        chatMessageBeanDao = new ChatMessageBeanDao(chatMessageBeanDaoConfig, this);
        downloadFileDao = new DownloadFileDao(downloadFileDaoConfig, this);
        realVerifyDao = new RealVerifyDao(realVerifyDaoConfig, this);
        recentContactDao = new RecentContactDao(recentContactDaoConfig, this);
        uploadFileDao = new UploadFileDao(uploadFileDaoConfig, this);

        registerDao(Activate.class, activateDao);
//        registerDao(BindCivilCard.class, bindCivilCardDao);
        registerDao(ChatMessageBean.class, chatMessageBeanDao);
//        registerDao(DownloadFile.class, downloadFileDao);
//        registerDao(RealVerify.class, realVerifyDao);
//        registerDao(RecentContact.class, recentContactDao);
//        registerDao(UploadFile.class, uploadFileDao);
    }
    
    public void clear() {
        activateDaoConfig.clearIdentityScope();
//        bindCivilCardDaoConfig.clearIdentityScope();
        chatMessageBeanDaoConfig.clearIdentityScope();
        downloadFileDaoConfig.clearIdentityScope();
        realVerifyDaoConfig.clearIdentityScope();
        recentContactDaoConfig.clearIdentityScope();
        uploadFileDaoConfig.clearIdentityScope();
    }

    public ActivateDao getActivateDao() {
        return activateDao;
    }

//    public BindCivilCardDao getBindCivilCardDao() {
//        return bindCivilCardDao;
//    }

    public ChatMessageBeanDao getChatMessageBeanDao() {
        return chatMessageBeanDao;
    }

    public DownloadFileDao getDownloadFileDao() {
        return downloadFileDao;
    }

    public RealVerifyDao getRealVerifyDao() {
        return realVerifyDao;
    }

    public RecentContactDao getRecentContactDao() {
        return recentContactDao;
    }

    public UploadFileDao getUploadFileDao() {
        return uploadFileDao;
    }

}
