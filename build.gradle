// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: "libsVersion.gradle"

buildscript {
    repositories {

        // 自定义maven 仓库地址
//        maven { url "http://192.168.14.152:8081/artifactory/release_lib/" }

        // 国内镜像地址
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
        google()
    }

    // compile the rely on
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

//        // 发布项目到 jcenter 的插件, 方式一
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
//        // 发布项目到 jcenter 的插件, 方式二
//        classpath 'com.novoda:bintray-release:0.8.0'

//        // 发布到mavenCentral 使用的插件
//        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4'
    }
}

allprojects {
    repositories {

        // Gradle、maven从中央仓库mavenCentral（）http://repo1.maven.org/maven2/下载依赖包

        // 如果 中央库下载缓慢 可以使用 以下的国内镜像地址
//        def REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public/'
//        all { ArtifactRepository repo ->
//            if(repo instanceof MavenArtifactRepository){
//                def url = repo.url.toString()
//                if (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
//                    remove repo
//                }
//            }
//        }

//        maven {
//            url REPOSITORY_URL
//        }

        maven { url 'https://jitpack.io' }
        flatDir { dirs 'libs' }     // 设置本地引用的仓库
        jcenter()
        mavenCentral()
        google()
    }

    // specify the compilation of java version, and encoding format
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
//        options.charSet 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    // cache lifeCycle
    // Gradle 对于动态版本和变化模块的缓存时间默认是 24 小时。
//    configurations.all {
//        //变化模块, 每隔10分钟查远程依赖是否存在更新,  "24, 'hours'"
//        resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
//        //采用动态版本声明的依赖缓存10分钟
//        resolutionStrategy.cacheDynamicVersionsFor 10*60, 'seconds'
//    }

    // 缓存引用添加方式changing: true
//    compile (group: "group", name: "module", version: "1.1-SNAPSHOT", changing: true)

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

